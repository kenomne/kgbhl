import { Router } from 'express';import db from '../db.js';import { authRequired } from '../middleware/auth.js';const router=Router();router.get('/',authRequired,(req,res)=>{db.all('SELECT * FROM items WHERE user_id = ? ORDER BY created_at DESC',[req.user.id],(err,rows)=>{if(err)return res.status(500).json({error:'Database error'});res.json(rows);});});router.post('/',authRequired,(req,res)=>{const{title,description}=req.body||{};if(!title)return res.status(400).json({error:'title required'});const stmt=db.prepare('INSERT INTO items (user_id, title, description) VALUES (?,?,?)');stmt.run([req.user.id,title,description||null],function(err){if(err)return res.status(500).json({error:'Database error'});db.get('SELECT * FROM items WHERE id = ?',[this.lastID],(err2,row)=>{if(err2)return res.status(500).json({error:'Database error'});res.status(201).json(row);});});});router.put('/:id',authRequired,(req,res)=>{const{id}=req.params;const{title,description}=req.body||{};db.run('UPDATE items SET title = COALESCE(?, title), description = COALESCE(?, description) WHERE id = ? AND user_id = ?',[title,description,id,req.user.id],function(err){if(err)return res.status(500).json({error:'Database error'});if(this.changes===0)return res.status(404).json({error:'Item not found'});db.get('SELECT * FROM items WHERE id = ?',[id],(err2,row)=>{if(err2)return res.status(500).json({error:'Database error'});res.json(row);});});});router.delete('/:id',authRequired,(req,res)=>{const{id}=req.params;db.run('DELETE FROM items WHERE id = ? AND user_id = ?',[id,req.user.id],function(err){if(err)return res.status(500).json({error:'Database error'});if(this.changes===0)return res.status(404).json({error:'Item not found'});res.status(204).send();});});export default router;